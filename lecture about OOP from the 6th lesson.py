"""
ООП
    1. + и - механизмв
    2. классы. объекты. атрибуты
    3. конструкторы. методы
    4. локал. и глобал. переменные
    5. модификаторы доступа
    6. икапсулирование, как безопасность от внешнего воздействия (это принцип ООП)
    7. наследие
    8. множественное наследие
    9. полиморфизм
"""
"""
1. 
+ поаторное использование кода
+ читаемость и гибкость кода
+ ускоренный поиск ошибок и их исправление
+ повышение безопасности проекта
+ модульность (для каждого класса принято отводить отдельный ф. и в нем работать) 
- хорошее понимание предметной области
- хорошее представление структуры приложениия
- сложность разбития проекта на классы
- сложность в модификации проекта
"""
# этот ф. будет использоваться как ф. для нового класса (описывающий человека)
# class - определяем и с большой буквы задаем имя
class Person: # ниже атрибуты - свойства которые могут описывать любого человека. Общее описание, создаем шаблон

